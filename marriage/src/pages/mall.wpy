/**
 * Revision History:
 *   Initial: 2018/09/20          Wang Huajian
 */

<style lang="less">
.layout {
  background-color: #F8F8F8;
}
.swiper {
 height: 360rpx;
 width: 100%;
}
.swiperImage {
  height: 100%;
  width: 100%;
}
.neck-flex {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20rpx;
  background-color: #FFFFFF;
}
.integral-flex {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: 20rpx;
  padding-left: 16rpx;
  padding-bottom: 20rpx;
}
.integrals-flex {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.word-integral {
  font-weight: 300;
  font-size: 36rpx;
  margin-right: 16rpx;
  color: #696969;
}
.word-points {
  font-weight: 300;
  font-size: 40rpx;
  color: #65ba6b;
}
.word-how {
  font-weight: 300;
  font-size: 26rpx;
  color: #999999;
}
.button-flex {
  padding-right: 16rpx;
}
.button {
  font-size: 28rpx;
  color: #999999;
}
.tab {
  display: flex;
  z-index: 10;
  position: -webkit-sticky;
  position: sticky;
  top: 50;
  background-color: #FFFFFF;
}
.tabContent {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
}
.tabFont {
  padding-top: 10px;
  margin-bottom: 10px;
}
.card-flex {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  margin: 10rpx;
}
.goods-flex {
  display: flex;
  flex-direction: column;
  background-color: #FFFFFF;
  padding-top: 20rpx;
  padding-bottom: 20rpx;
  padding-left: 30rpx;
  padding-right: 30rpx;
}
.subtitle {
  font-size: 26rpx;
  color: #696969;
}
.tag {
  font-size: 22rpx;
  color: #999999;
  margin-left: 6rpx;
  margin-right: 30rpx;
}
.goods {
  height: 220rpx;
  width: 300rpx;
}
.footer-flex {
  display: flex;
  flex-direction: row;
  align-items: center;
}
.word-goods-integral {
  font-size: 26rpx;
  color: #65ba6b;
}
</style>

<template>
  <view class="layout">
    <swiper
      class="swiper"
      autoplay="{{autoplay}}"
      indicator-dots="{{dots}}"
      indicator-color="{{dotsColor}}"
      indicator-active-color="{{dotsActiveColor}}"
      circular="{{circular}}"
      interval="{{interval}}"
      duration="{{duration}}"
    >
    <block wx:for="{{imgUrl}}" wx:key="index">
      <swiper-item>
        <image class="swiperImage" src="{{item}}"/>
      </swiper-item>
    </block>
    </swiper>
    <view class="neck-flex">
      <view class="integral-flex">
        <view class="integrals-flex">
          <text class="word-integral">我的积分:</text>
          <text class="word-points">6666</text>
        </view>
        <text class="word-how">如何获取更多积分</text>
      </view>
      <view class="button-flex">
        <navigator url="/pages/mall/history" open-type="navigateTo">
          <button class="button">兑换记录</button>
        </navigator>
      </view>
    </view>
    <view class="tab">
      <view class="tabContent" wx:for="{{tab}}" wx:key="index" bindtap="tap" id="{{index}}">
        <view
          class="tabFont"
          style="color: {{index == currentTargetId ? '#349BFF' : '#666666'}};border-bottom: {{index == currentTargetId ? '2px solid #349BFF' : ''}};"
        >
          {{item}}
        </view>
      </view>
    </view>
    <view wx:if="{{currentTargetId == 0}}">
      <view class="card-flex">
        <repeat for="{{goods}}" key="index" index="index" item="item">
          <child :item="item"></child>
        </repeat>
      </view>
    </view>
    <view wx:if="{{currentTargetId == 1}}">
      <text></text>
      <text></text>
      <image />
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { SwiperPhoto } from '../libs/manual-content'
  import { byprice } from '../service/goods'
  import goodsCard from '../components/goodsCard'

  export default class Fate extends wepy.page {
    config = {
      navigationBarTitleText: '积分商城'
    }
    components = {
      child: goodsCard
    }
    data = {
      imgUrl: SwiperPhoto,
      circular: true,
      autoplay: true,
      interval: 5000,
      duration: 1000,
      dots: true,
      dotsColor: '#ffffff',
      dotsActiveColor: '#349BFF',
      tab: ['线上商品', '线下商品'],
      currentTargetId: 0,
      goods: []
    }
    methods = {
      tap(e) {
        let self = this
        self.currentTargetId = e.currentTarget.id
        self.type = self.tab[self.currentTargetId]
      }
    }
    async onLoad() {
      let resp = await byprice()
      this.goods = [...resp.data]
      this.$apply()
    }
  }
</script>
